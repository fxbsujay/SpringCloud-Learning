server:
  port: 8801
#######################  水平分库分表
spring:
  shardingsphere:
    datasource:
      names: m1,m2
      m1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/springcloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: 123456
      m2:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://localhost:3306/springcloud?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
        username: root
        password: 123456
    sharding:
      tables:
        course:
          # 指定数据库的分布情况
          actual-data-nodes: m$->{1..2}.course_$->{1..2}
          # 分布式序列策略配置
          key-generator:
            # 分布式序列列名称
            column: cid
            # 分布式序列算法名称 雪花算法
            type: SNOWFLAKE
          # 指定分片策略 cid为偶数则到course_1种，奇数则course_2
          table-strategy:
            inline:
              sharding-column: cid
              algorithm-expression: course_$->{cid % 2 +1}
          # 第一种写法
          database-strategy:
            inline:
              sharding-column: user_id
                algorithm-expression: m$->{user_id % 2 +1}
      # 第二种写法
      default-database-strategy:
        inline:
          sharding-column: user_id
          algorithm-expression: m$->{user_id % 2 +1}

    props:
      sql:
        show: true

